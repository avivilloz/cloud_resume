---
- name: Play for deploying S3 files and invalidating CloudFront cache
  hosts: localhost
  connection: local

  vars:
    # outside vars
    project_base_dir: "{{ project_base_dir }}"
    s3_bucket_name: "{{ s3_bucket_name }}"
    api_url: "{{ api_url }}"
    cloudfront_distribution_id: "{{ cloudfront_distribution_id }}"

    # local vars
    website_files_dir: "{{ project_base_dir }}/frontend"
    s3_buckets_dir: "{{ project_base_dir }}/temp/s3_buckets"
    s3_bucket_sync_dir: "{{ s3_buckets_dir }}/{{ s3_bucket_name }}"
    script_js_path: "{{ s3_bucket_sync_dir }}/script.js"


  tasks:
    - name: Install required python libraries
      ansible.builtin.pip:
        name:
          - boto3==1.34.151
          - botocore==1.34.151

    - name: Create s3 bucket sync dir
      ansible.builtin.file:
        state: directory
        path: "{{ s3_bucket_sync_dir }}"
        mode: "0755"

    - name: Copy s3 files to s3 bucket sync dir
      ansible.builtin.copy:
        src: "{{ website_files_dir }}/"
        dest: "{{ s3_bucket_sync_dir }}"
        mode: "0755"

    - name: Inject API url into script.js file
      ansible.builtin.replace:
        path: "{{ script_js_path }}"
        regexp: "__API_URL__"
        replace: "{{ api_url }}"

    - name: Synchronize directory contents to S3 bucket
      community.aws.s3_sync:
        bucket: "{{ s3_bucket_name }}"
        file_root: "{{ s3_bucket_sync_dir }}"
        permission: "public-read"
        delete: true

    - name: Create CloudFront invalidations
      community.aws.cloudfront_invalidation:
        distribution_id: "{{ cloudfront_distribution_id }}"
        target_paths:
          - /*
